1. Часова складність методу append класу list в нотації Великого О: O(1)

2. Часова складність перевірки входження елементу в список (elem in my_list) в нотації Великого О: O(n), де n - кількість елементів у списку

3. a) Часова складність методу pop класу list у загальному випадку: O(n), де n - кількість елементів у списку
b) У випадку pop без параметра або з параметром -1, часова складність також є O(1), оскільки не потрібно переміщати інші елементи

4. Часова складність додавання елементу в словник  у Великому О: O(1)

5. Часова складність перевірки входження елементу в словник (elem in my_dict) у Великому О: O(1)

6. if isinstance(value, list):
    for i in range(0, 100, 3):
        if i in value:
            value.remove(i)

    Часова складність цього коду у нотації Великого О - (N * 34), що можна спростити до O(N) (константа 34 не враховується в нотації Великого О)

7. work_list = [*a]
for i in range(len(work_list)):
    for j in range(1, len(work_list)):
        if work_list[j-1] > work_list[j]:
            buffer = work_list[j-1]
            work_list[j-1] = work_list[j]
            work_list[j] = buffer

    Часова складність коду у нотації Великого О: O(N**2)


8. result = {}
  for elem in some_list:
    if elem not in result:
        result[elem] = True

    Часова складність коду у нотації Великого О: O(N)